<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="HUE ON_OFF" id="1" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="344" y="63">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import sys

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")
        self.folderName = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if self.folderName not in sys.path:
            sys.path.append(self.folderName)

    def onUnload(self):
        if self.folderName and self.folderName in sys.path:
            sys.path.remove(self.folderName)
        self.folderName = None

    def onInput_onStart(self, data):
        import requests, json

        headers = {'content-type': 'application/json'}

        ip = self.getParameter("HUE Bridge IPAddr")
        auid = self.getParameter("authorized user id")
        lids = self.getParameter("light IDs").split(";")

        for lid in lids:
            url = "http://%s/api/%s/lights/%s/state" % (ip,auid,lid)
            self.logger.info(url)
            data = json.dumps({"on" : self.getParameter("On")})
            r = requests.put(url, data, headers=headers)
            self.logger.info(str(r.text))

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="HUE Bridge IPAddr" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="5" />
                            <Parameter name="authorized user id" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="6" />
                            <Parameter name="light IDs" inherits_from_parent="0" content_type="3" value="1;2" default_value="" custom_choice="0" tooltip="点灯/消灯するライトの ID を指定。複数指定する場合 ; 区切りで" id="7" />
                            <Parameter name="On" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="8" />
                        </Box>
                        <Box name="Log" id="3" localization="8" tooltip="Prompt the message in the debug window. You can set a prefix and a priority&#x0A;for the message in the parameters." x="479" y="184">
                            <bitmap>media/images/box/print.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_message(self, p):
        sPriority = self.getParameter("Priority")
        sMessage = self.getParameter("Message prefix")
        if( sMessage != "" and p != None ):
            sMessage += ": "
        if( p != None ):
            sMessage += str(p)
        if( sPriority == "Fatal" ):
            self.logger.fatal( sMessage )
        elif( sPriority == "Error" ):
            self.logger.error( sMessage )
        elif( sPriority == "Warning" ):
            self.logger.warning( sMessage )
        elif( sPriority == "Info" ):
            self.logger.info( sMessage )
        elif( sPriority == "Debug" ):
            self.logger.debug( sMessage )
        self.onDone()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="message" type="0" type_size="1" nature="1" inner="0" tooltip='The message to print or a &quot;Bang&quot; to only print the message set as parameter.' id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Message prefix" inherits_from_parent="0" content_type="3" value="Message text" default_value="Message text" custom_choice="0" tooltip="Enter the text you want to print before the input message." id="4" />
                            <Parameter name="Priority" inherits_from_parent="0" content_type="3" value="Info" default_value="Info" custom_choice="0" tooltip="Enter the priority of your message. If you select error, the box will get red when it will be stimulated." id="5">
                                <Choice value="Fatal" />
                                <Choice value="Error" />
                                <Choice value="Warning" />
                                <Choice value="Info" />
                                <Choice value="Debug" />
                            </Parameter>
                        </Box>
                        <Box name="HUE GET" id="2" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="344" y="188">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import sys

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")
        self.folderName = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if self.folderName not in sys.path:
            sys.path.append(self.folderName)

    def onUnload(self):
        if self.folderName and self.folderName in sys.path:
            sys.path.remove(self.folderName)
        self.folderName = None

    def onInput_onStart(self, data):
        import requests, json

        headers = {'content-type': 'application/json'}

        ip = self.getParameter("HUE Bridge IPAddr")
        auid = self.getParameter("authorized user id")
        lid = self.getParameter("light ID")
        url = "http://%s/api/%s/lights/%s/state" % (ip,auid,lid)

        r = requests.get(url, headers=headers)
        if r != None:
            self.onStopped(str(r.text))

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="HUE Bridge IPAddr" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="5" />
                            <Parameter name="authorized user id" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="6" />
                            <Parameter name="light ID" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="100" tooltip="" id="7" />
                        </Box>
                        <Box name="Comment" id="4" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="336" y="435">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("HUE ON OFF ボックスは HUE を点灯、消灯するボックスです。\nHUE GET ボックスは HUE の点灯、消灯の情報を取得するボックスです。\nHUE COLOR ボックスは HUE の発酵食を変更するボックスです。入力に R,G,B の値を配列で与えます（それぞれ 0 - 255 の値）\n\nそれぞれボックスプロパティー HUE Bridge IPAddr に HUE ブリッジの IP アドレスを\nauthorized user id には登録し取得された user ID を設定します。\n\n各設定情報について詳しくは次を参照\nhttp://www.developers.meethue.com/documentation/getting-started\n\n\n\n")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[HUE ON OFF ボックスは HUE を点灯、消灯するボックスです。
HUE GET ボックスは HUE の点灯、消灯の情報を取得するボックスです。
HUE COLOR ボックスは HUE の発酵食を変更するボックスです。入力に R,G,B の値を配列で与えます（それぞれ 0 - 255 の値）

それぞれボックスプロパティー HUE Bridge IPAddr に HUE ブリッジの IP アドレスを
authorized user id には登録し取得された user ID を設定します。

各設定情報について詳しくは次を参照
http://www.developers.meethue.com/documentation/getting-started



]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Comment (1)" id="5" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="51" y="49">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("このサンプルは requests モジュールを必要とします。\n\nディレクトリ PepperHueSampleBoxes 配下で次を実行し、モジュールをプロジェクトに取り込みます\n\npip install requests --target ./lib --no-compile\n")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[このサンプルは requests モジュールを必要とします。

ディレクトリ PepperHueSampleBoxes 配下で次を実行し、モジュールをプロジェクトに取り込みます

pip install requests --target ./lib --no-compile
]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="HUE COLOR" id="6" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="350" y="313">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import sys

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")
        self.folderName = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if self.folderName not in sys.path:
            sys.path.append(self.folderName)

    def onUnload(self):
        if self.folderName and self.folderName in sys.path:
            sys.path.remove(self.folderName)
        self.folderName = None

    def onInput_onStart(self, data):
        import requests, json, colorsys

        r = float(data[0])
        g = float(data[1])
        b = float(data[2])
        #self.logger.info("=== %d %d %d ==" % (r,g,b))
        h, s, v = colorsys.rgb_to_hsv(r/255, g/255, b/256)
        #self.logger.info("=== h:%.2f s:%.2f v:%.2f ==" % (h,s,v))

        h = int(h*65535)
        s = int(s*255)
        v = int(v*255)

        headers = {'content-type': 'application/json'}

        ip = self.getParameter("HUE Bridge IPAddr")
        auid = self.getParameter("authorized user id")
        lids = self.getParameter("light IDs").split(";")

        for lid in lids:
            url = "http://%s/api/%s/lights/%s/state" % (ip,auid,lid)
            self.logger.info(url)
            data = json.dumps({"on" : True,"sat":s,"bri":v,"hue":h})
            r = requests.put(url, data, headers=headers)
            self.logger.info(str(r.text))

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="HUE Bridge IPAddr" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="5" />
                            <Parameter name="authorized user id" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="6" />
                            <Parameter name="light IDs" inherits_from_parent="0" content_type="3" value="1;2" default_value="" custom_choice="0" tooltip="ライトのID を設定。複数ある場合は ; 区切りで&#x0A;" id="7" />
                        </Box>
                        <Box name="Color Edit" id="7" localization="8" tooltip="Send a color encoded as [R,G,B] values." plugin="coloredit_plugin" x="197" y="329">
                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([42, 247, 165])]]>
</content>
                            </script>
                            <pluginContent>
                                <color>#2af7a5</color>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the color on the output." id="2" />
                            <Output name="onStopped" type="2" type_size="3" nature="2" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                        </Box>
                        <Box name="HUE PUT" id="8" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="608" y="56">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import sys

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")
        self.folderName = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if self.folderName not in sys.path:
            sys.path.append(self.folderName)

    def onUnload(self):
        if self.folderName and self.folderName in sys.path:
            sys.path.remove(self.folderName)
        self.folderName = None

    def onInput_onStart(self, data):
        import requests, json

        headers = {'content-type': 'application/json'}

        ip = self.getParameter("HUE Bridge IPAddr")
        auid = self.getParameter("authorized user id")
        lid = self.getParameter("light ID")
        url = "http://%s/api/%s/lights/%s/state" % (ip,auid,lid)
        self.logger.info(url)
        data = json.dumps({"on" : self.getParameter("On"),"sat":self.getParameter("sat"),"bri":self.getParameter("bri"),"hue":self.getParameter("hue")})
        r = requests.put(url, data, headers=headers)
        if r != None:
            self.onStopped(str(r.text))

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="HUE Bridge IPAddr" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="5" />
                            <Parameter name="authorized user id" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="6" />
                            <Parameter name="light ID" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="100" tooltip="" id="7" />
                            <Parameter name="On" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="8" />
                            <Parameter name="sat" inherits_from_parent="0" content_type="1" value="255" default_value="255" min="0" max="255" tooltip="" id="9" />
                            <Parameter name="bri" inherits_from_parent="0" content_type="1" value="255" default_value="255" min="0" max="255" tooltip="" id="10" />
                            <Parameter name="hue" inherits_from_parent="0" content_type="1" value="10000" default_value="10000" min="0" max="65535" tooltip="" id="11" />
                        </Box>
                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                        <Link inputowner="6" indexofinput="2" outputowner="7" indexofoutput="3" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
